syntax = "proto3";

package com.evidentdb.service;

import "domain.proto";

option csharp_namespace = "EvidentDB.V1";
option go_package = "evidentdb.com/genproto/v1";
option java_package = "com.evidentdb.service.v1";
option java_multiple_files = true;
option java_outer_classname = "EvidentDbService";
option php_namespace = "Com\\EvidentDB\\V1\\Proto";
option ruby_package = "Com::EvidentDB::V1::Proto";
option objc_class_prefix = "EDB";

service EvidentDb {
  // Command
  rpc createDatabase(com.evidentdb.domain.DatabaseCreationInfo) returns (CreateDatabaseReply) {}
  rpc renameDatabase(com.evidentdb.domain.DatabaseRenameInfo)   returns (RenameDatabaseReply) {}
  rpc deleteDatabase(com.evidentdb.domain.DatabaseDeletionInfo) returns (DeleteDatabaseReply) {}
  rpc transactBatch(com.evidentdb.domain.BatchProposal)         returns (TransactBatchReply)  {}

  // Query
}

message CreateDatabaseReply {
  oneof result {
    com.evidentdb.domain.Database database = 1;
    com.evidentdb.domain.InvalidDatabaseNameError invalid_database_name_error = 2;
    com.evidentdb.domain.DatabaseNameAlreadyExistsError database_name_already_exists_error = 3;
  }
}

message RenameDatabaseReply {
  oneof result {
    com.evidentdb.domain.DatabaseRenameInfo database_rename_info = 1;
    com.evidentdb.domain.InvalidDatabaseNameError invalid_database_name_error = 2;
    com.evidentdb.domain.DatabaseNameAlreadyExistsError database_name_already_exists_error = 3;
    com.evidentdb.domain.DatabaseNotFoundError database_not_found_error = 4;
  }
}

message DeleteDatabaseReply {
  oneof result {
    com.evidentdb.domain.DatabaseDeletionInfo database_deletion_info = 1;
    com.evidentdb.domain.DatabaseNotFoundError database_not_found_error = 2;
  }
}

message BatchResult {
  string id = 1;
  string databaseId = 2;
  repeated string event_ids = 3;
}

message TransactBatchReply {
  oneof result {
    BatchResult batch_result = 1;
    com.evidentdb.domain.DatabaseNotFoundError database_not_found_error = 2;
    com.evidentdb.domain.NoEventsProvidedError no_events_provided_error = 3;
    com.evidentdb.domain.InvalidEventsError invalid_events_error = 4;
    com.evidentdb.domain.StreamStateConflictsError stream_state_conflict_error = 5;
  }
}
