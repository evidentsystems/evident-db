syntax = "proto3";

package com.evidentdb;

import "domain.proto";
import "cloudevents.proto";

option csharp_namespace = "EvidentDB.V1";
option go_package = "evidentdb.com/genproto/v1";
option java_package = "com.evidentdb.service.v1";
option java_multiple_files = true;
option java_outer_classname = "EvidentDbService";
option php_namespace = "Com\\EvidentDB\\V1\\Proto";
option ruby_package = "Com::EvidentDB::V1::Proto";
option objc_class_prefix = "EDB";

service EvidentDb {
  // Command
  rpc createDatabase(CreateDatabaseRequest) returns (CreateDatabaseReply) {}
  rpc transactBatch(TransactBatchRequest)   returns (TransactBatchReply)  {}
  rpc deleteDatabase(DeleteDatabaseRequest) returns (DeleteDatabaseReply) {}

  // Query
  rpc catalog(CatalogRequest) returns (stream CatalogReply) {}
  rpc connect(ConnectRequest) returns (stream DatabaseReply) {}
  rpc latestDatabase(LatestDatabaseRequest) returns (DatabaseReply) {}
  rpc databaseAtRevision(DatabaseAtRevisionRequest) returns (DatabaseReply) {}
  rpc databaseLog(DatabaseLogRequest) returns (stream DatabaseLogReply) {}
  rpc stream(StreamRequest) returns (stream EventRevisionReply) {}
  rpc subjectStream(SubjectStreamRequest) returns (stream EventRevisionReply) {}
  rpc subject(SubjectRequest) returns (stream EventRevisionReply) {}
  rpc eventType(EventTypeRequest) returns (stream EventRevisionReply) {}
  rpc eventById(EventByIdRequest) returns (EventReply) {}
  rpc events(EventByRevisionRequest) returns (stream EventReply) {}
}

// Command API

message CreateDatabaseRequest {
  string name = 1;
}

message CreateDatabaseReply {
  Database database = 1;
}

message TransactBatchRequest {
  string database = 1;
  repeated io.cloudevents.v1.CloudEvent events = 2;
  repeated BatchConstraint constraints = 3;
}

message TransactBatchReply {
  Batch batch = 1;
}

message DeleteDatabaseRequest {
  string name = 1;
}

message DeleteDatabaseReply {
  Database database = 1;
}

// Query API

message CatalogRequest {}
message CatalogReply {
  string database_name = 1;
}

message ConnectRequest {
  string name = 1;
}
message LatestDatabaseRequest {
  string name = 1;
}
message DatabaseAtRevisionRequest {
  string name = 1;
  uint64 revision = 2;
}
message DatabaseReply {
  Database database = 1;
}

message DatabaseLogRequest {
  string name = 1;
  uint64 revision = 2;
}

message DatabaseLogReply {
  BatchSummary batch = 1;
}

message StreamRequest {
  string database = 1;
  uint64 revision = 2;
  string stream = 3;
}

message SubjectStreamRequest {
  string database = 1;
  uint64 revision = 2;
  string stream = 3;
  string subject = 4;
}

message SubjectRequest {
  string database = 1;
  uint64 revision = 2;
  string subject = 3;
}

message EventTypeRequest {
  string database = 1;
  uint64 revision = 2;
  string event_type = 3;
}

message EventRevisionReply {
  uint64 revision = 1;
}

message EventByIdRequest {
  string database = 1;
  uint64 revision = 2;
  string stream = 3;
  string event_id = 4;
}

message EventByRevisionRequest {
  string database = 1;
  repeated uint64 event_revisions = 2;
}

message EventReply {
  io.cloudevents.v1.CloudEvent event = 1;
}
